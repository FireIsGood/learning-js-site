@import url("https://fonts.googleapis.com/css2?family=Noto+Sans&display=swap");

$card-border-clr: rgb(66, 66, 66);
$card-self-cover: 8rem;

body {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  perspective: 10px;
}

main {
  margin-inline: 1rem;
}

.deck {
  margin-top: 2rem;
  display: flex;

  > * + * {
    margin-left: -$card-self-cover;
  }
}

.card {
  min-width: 245px;
  min-height: 350px;
  display: grid;
  position: relative;
  transform-style: preserve-3d;
  cursor: pointer;
  transition: transform 250ms, margin, 250ms;

  > * {
    display: grid;
    transition: transform 250ms;
    box-sizing: border-box;
    border-radius: 10px;
    // padding: 5px;
    // background-color: aliceblue;
    // border: 3px solid $card-border-clr;
    // box-shadow: 0 0 4px rgba(0, 0, 0, 0.5);

    img {
      grid-area: 1 / -1;
      place-self: end left;
      object-fit: cover;
    }

    .character {
      position: relative;
      left: 25px;
      width: 223px;
      bottom: 95px;
      height: 438px;
      z-index: 0;
    }

    .top-img {
      position: relative;
      z-index: 0;
    }

    p {
      grid-area: 1 / -1;
      padding: 3rem 2.5rem;
      place-self: end;
      margin: 0;
      color: white;
      font-family: "Noto Sans", Arial, Helvetica, sans-serif;
      font-size: 2em;
      z-index: 1;
    }
  }

  .front {
    grid-area: 1 / -1;
    background-size: 100%;
    background-position: center center;
    background-repeat: no-repeat;
    text-align: center;
    transform: rotateY(0turn);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }

  .back {
    grid-area: 1 / -1;
    // background-image: url(../assets/AMOGUS.png);
    // background-size: 100%;
    // background-position: center center;
    // background-repeat: no-repeat;
    text-align: center;
    transform: rotateY(0.5turn);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }

  &:hover {
    transform: translateY(-1rem);

    // > * {
    //   box-shadow: 0 0 4px rgba(0, 0, 0, 0.5);
    // }

    & ~ .card {
      transform: translateX($card-self-cover);
    }
  }
}

.card-flip {
  .front {
    transform: rotateY(0.5turn);
  }
  .back {
    transform: rotateY(1turn);
  }
}
